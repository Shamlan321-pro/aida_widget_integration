[project]
name = "aida_widget_integration"
authors = [
    { name = "AIDA Team", email = "support@aida.com"}
]
description = "A Frappe app that integrates AIDA AI assistant as a floating chat widget in Mocxha"
requires-python = ">=3.10"
readme = "README.md"
version = "0.0.1"
keywords = ["frappe", "mocxha", "ai", "chatbot", "widget", "integration"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Web Environment",
    "Framework :: Frappe",
    "Intended Audience :: Developers",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
    "Topic :: Office/Business",
    "Topic :: Software Development :: Libraries :: Application Frameworks",
]
dependencies = [
    # "frappe~=15.0.0" # Installed and managed by bench.
    "requests>=2.25.0",
]

[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

# These dependencies are only installed when developer mode is enabled
[tool.bench.dev-dependencies]
pytest = ">=6.0"
pytest-cov = ">=2.0"
black = ">=22.0"

[project.urls]
Homepage = "https://github.com/aida-team/aida-widget-integration"
Repository = "https://github.com/aida-team/aida-widget-integration.git"
Documentation = "https://github.com/aida-team/aida-widget-integration/blob/main/README.md"
"Bug Tracker" = "https://github.com/aida-team/aida-widget-integration/issues"

[tool.ruff]
line-length = 110
target-version = "py310"

[tool.ruff.lint]
select = [
    "F",
    "E",
    "W",
    "I",
    "UP",
    "B",
    "RUF",
]
ignore = [
    "B017", # assertRaises(Exception) - should be more specific
    "B018", # useless expression, not assigned to anything
    "B023", # function doesn't bind loop variable - will have last iteration's value
    "B904", # raise inside except without from
    "E101", # indentation contains mixed spaces and tabs
    "E402", # module level import not at top of file
    "E501", # line too long
    "E741", # ambiguous variable name
    "F401", # "unused" imports
    "F403", # can't detect undefined names from * import
    "F405", # can't detect undefined names from * import
    "F722", # syntax error in forward type annotation
    "W191", # indentation contains tabs
    "UP030", # Use implicit references for positional format fields (translations)
    "UP031", # Use format specifiers instead of percent format
    "UP032", # Use f-string instead of `format` call (translations)
]
typing-modules = ["frappe.types.DF"]

[tool.ruff.format]
quote-style = "double"
indent-style = "tab"
docstring-code-format = true
